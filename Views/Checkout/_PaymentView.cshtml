@model AirwallexPaymentIntent;

<div>
    <div class="mt-5">
        @if (Model.AvailablePaymentMethodTypes.Contains("applepay"))
        {
            <div id="applePayButton"></div>
        }

        @if (Model.AvailablePaymentMethodTypes.Contains("googlepay"))
        {
            <div id="googlePayButton"></div>
        }

    </div>

    <div class="Divider">
        <hr />
        <p class="text-center text-sm m-0">Or pay another way</p>
    </div>

    <div class="mt-3">Payment method</div>

    <div class="d-flex mt-3">

        @if (Model.AvailablePaymentMethodTypes.Contains("card"))
        {
            <div class="Card selected">
                <svg viewBox="0 0 576 512" xmlns="http://www.w3.org/2000/svg">
                    <path d="M512 32h-448c-35.35 0-64 28.66-64 64L0 128h576V96C576 60.66 547.3 32 512 32zM0 416c0 35.34 28.65 64 64 64h448c35.35 0 64-28.66 64-64V224H0L0 416zM191.1 360c0-4.422 3.582-8 8-8h143.1c4.418 0 8 3.578 8 8L352 376c0 4.418-3.582 8-8 8h-144C195.6 384 192 380.4 192 376L191.1 360zM63.1 360c0-4.422 3.582-8 8-8h80c4.418 0 8 3.578 8 8L160 376C160 380.4 156.4 384 152 384h-80C67.58 384 64 380.4 64 376L63.1 360z" />
                </svg>
                <div class="Card-Title">Card</div>
            </div>
        }
    </div>


    <partial name="_CardPayment.cshtml" />

</div>



<script>
    try {
        // STEP #2: Initialize the Airwallex global context for event communication
        Airwallex.init({
            env: 'demo',
            origin: window.location.origin,
        });

        // STEP #4: Create 'applepay' element
        const applePayElement = Airwallex.createElement('applePayButton', {

            // Required, Apple Pay uses intent Id and client_secret to prepare checkout
            intent_id: '@Model.Id',
            client_secret: '@Model.ClientSecret',
            amount: {
                value: '@Model.Amount',
                currency: '@Model.Currency',
            },
            totalPriceLabel: 'COMPANY, INC.',
            buttonType: 'buy',
            buttonColor: 'white-with-line',
            origin: window.location.origin,
            countryCode: '@Model.Currency.Substring(0,2)',

        });

        const googlePayElement = Airwallex.createElement("googlePayButton", {
            intent_id: '@Model.Id',
            origin: window.location.origin,
            client_secret: '@Model.ClientSecret',
            countryCode: '@Model.Currency.Substring(0,2)',
            buttonType: 'buy',
            amount: {
                value: '@Model.Amount',
                currency: '@Model.Currency',
            },
        });

        const googleElement = googlePayElement.mount('googlePayButton'); 
        const appleElement = applePayElement.mount('applePayButton');

        appleElement.addEventListener('onReady', (event) => {
            console.log('Element is ready', event.detail);
        });
        appleElement.addEventListener('onError', (event) => {
            const { error } = event.detail;
            console.error('There was an error', error);
        });
        appleElement.addEventListener('onSuccess', (event) => {
            alert("Success");
        });

        googleElement.addEventListener('onReady', (event) => {
            console.log('Element is ready', event.detail);
        });
        googleElement.addEventListener('onError', (event) => {
            const { error } = event.detail;
            console.error('There was an error', error);
        });
        googleElement.addEventListener('onSuccess', (event) => {
            alert("Success");
        });
    } catch (error) {
        console.error('There was an error', error);
    }


</script>
